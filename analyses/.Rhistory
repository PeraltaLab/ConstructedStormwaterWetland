p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2, labeller=labeller(Date2 = labels))
p1
date_1 <- as.factor(design.ns.final$Date2)
labels <- c("Day 0","Day 18", "Day 45")
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~date_1, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(.~date_1, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(. ~Date2, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ date_1, labeller=labeller(date_1 = labels))
p1
date_1 <- as.factor(design.ns.final$Date2)
date_1 <- as.factor(design.ns.final$Date2)
labels <- c(0="Day 0",18="Day 18", 45="Day 45")
labels <- c("0"="Day 0","18"="Day 18", "45"="Day 45")
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ date_1, labeller=labeller(date_1 = labels))
p1
date_1 <- as.factor(design.ns.final$Date2)
labels <- c("0"="Day 0","18"="Day 18", "45"="Day 45")
labels
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ date_1, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~date_1)+facet_grid(. ~ date_1, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(date_1 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Shannon Diversity Index (H')") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
rm(list = ls())
#Set source R tools
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
#load req'd packages
require("vegan")
require("dplyr")
require("nlme")
require("reshape2")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
require("MASS")
require("grid")
require("ape")
require("png")
require("picante")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load design file - no source tanks
design.ns <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design.ns)
str(design.ns)
dim(design.ns)
# load design file - with source tanks but missing decomp, nutrients, sreal, Date2 columns
design.full <- read.csv("../data/design_CSI.csv", row.names=1)
design.full <- design.full[-c(grep("mock community", design.full$CSI_ID)), ]
dim(design.full)
# load OTU file
csi_otu <- read.otu("../data/CSI.shared")
dim(csi_otu)
# remove extra site (no mock community)
# design with source tanks
missing <- setdiff(rownames(design.full), rownames(csi_otu))
design.full <- design.full[-(which(rownames(design.full) == missing)), ]
dim(design.full)
# OTU table - remove otu's w/ < 2 occurrences across all sites
otu_removal <- csi_otu[, which(colSums(csi_otu) >= 2)]
dim(otu_removal)
aa <- (rowSums(otu_removal))
aa # CSI033-7180 reads CSI101=75 reads - removed
# OTU table - removed low abundance samples
csi_low_remov <- otu_removal[which(rowSums(otu_removal) >= 13000), ]
dim(csi_low_remov)
# OTU table - odd sites in bacterial composition data and remove in design file
odd.sites <- c("CSI033","CSI101")
otu_final <- csi_low_remov[setdiff(rownames(csi_low_remov), odd.sites), ]
design_final <- design.full[setdiff(rownames(design.full), odd.sites), ]
design.ns <- design.ns[setdiff(rownames(design.ns), odd.sites), ]
all.equal(rownames(design_final), rownames(otu_final))
# create presence/absence and relative abundance matrices
csi_pres_abs <- (otu_final > 0) * 1
csi_relabun <- otu_final
for (i in 1:dim(otu_final)[1]) {
csi_relabun[i, ] <- otu_final[i, ]/sum(otu_final[i,
])
}
# import taxonomy file for later
csi.tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy", format = "rdp", tax.levels = 6, col.tax = 3)
# bind design and bact files
csi.full <- cbind(design_final,csi_relabun)
# REMOVE source tanks from otu file
# REMOVE source tanks Number 1,2,3 from otu_final and use design.ns (manually removed source tanks)
temp <- rownames(design_final[which(design_final$Number %in% c(1,2,3)), ])
otu_final.ns <- otu_final[-(which(rownames(otu_final) %in% temp)), ]
dim(otu_final.ns)
dim(design.ns)
#drop missing data
missing <- setdiff(rownames(design.ns), rownames(otu_final.ns))
design.ns2 <- design.ns[-(which(rownames(design.ns) == missing)), ]
dim(design.ns2)
# Drop levels of factors that are no longer in data set
design.ns.final <- droplevels(design.ns2)
all.equal(rownames(design.ns2), rownames(otu_final.ns))
# create presence/absence and relative abundance matrices
csi_pres_abs.ns <- (otu_final.ns > 0) * 1
csi_relabun.ns <- otu_final.ns
for (i in 1:dim(otu_final.ns)[1]) {
csi_relabun.ns[i, ] <- otu_final.ns[i, ]/sum(otu_final.ns[i,
])
}
# bind design and bact files
csi.full.ns <- cbind(design.ns.final,csi_relabun.ns)
csi.ns <- cbind(design.ns.final,otu_final.ns)
# Set treatments
treatments1 <- as.factor(design.ns.final$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design.ns.final$Dispersal)
levels(treatments2) <- c("2","3")
date_1 <- as.factor(design.ns.final$Date2)
# Rarefy Abundances (min abundance is 13,240. We are sampling to 13,000)
min(rowSums(otu_final.ns))
otu.rarefy <- rrarefy(otu_final.ns, 13000)
# Calculate Shannon H' (called shannon) using full data set (WITH source tanks)
shannon <- diversity(otu.rarefy, "shannon")
# Species Richness
richness <- rowSums((otu.rarefy >= 1))
# Pielou’s evenness
J <- shannon/log(specnumber(otu.rarefy[,-c(1:1)]))
# Dombined design,shannon,richness,evenness - no source tanks
csi_otu.div <- cbind(design.ns.final,shannon,richness,J)
date_1 <- as.factor(design.ns.final$Date2)
labels <- c("0"="Day 0","18"="Day 18", "45"="Day 45")
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Shannon Diversity Index (H')") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p <- ggplot(csi_otu.div, aes(x=Salinity, y=J, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Evenness Pielou's J") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p <- ggplot(csi_otu.div, aes(x=Salinity, y=J, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Pielou's Evenness (J')") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/pielousj.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/shannon.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(csi_otu.div, aes(x=Salinity, y=richness, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Species Richness") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/richness.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
rm(list=ls())
setwd("~/GitHub/CropDiversity/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("nlme")
require("reshape")
require("ggplot2")
require("ade4")
require("png")
require ("agricolae")
require("tidyr")
require("ggpubr")
require("multcompView")
# Import Environmental Data
design.in <- read.csv("../data/BDsoil_exptdesign.csv", row.names = 1)
# ID S and W treatments
SnW <- rownames(design.in[which(design.in$rotation == "S" |
design.in$rotation == "W"), ])
# Remove S and W treatments
design <- design.in[-(which(rownames(design.in) %in% SnW)), ]
design <- droplevels(design)
# Define Treatments ###check order of treatments
treatments <- factor(design$rotation, levels = c("fallow", "CSW-2cov",
"CSW-1cov", "CSW", "CS", "C-1cov", "C"))
all.equal(as.character(design$rotation), as.character(treatments))
# Import OTU data
# Import Raw Data
BDdata.in <- read.otu("../data/BD.shared")
# Remove Mock Community, Blank and Undetermined
BDdata.in2 <- BDdata.in[grepl("BD[0-9][0-9]", rownames(BDdata.in)), ]
# Remove S and W Treatments
SnW2 <- gsub("-", "", SnW)
BDdata.in2 <- BDdata.in2[-(which(rownames(BDdata.in2) %in% SnW2)), ]
# Remove OTUs with less than two occurences across all sites
BDdata <- BDdata.in2[, which(colSums(BDdata.in2) >= 2)]
# Make Presence Absence Matrix
BDdataPA <- (BDdata > 0) * 1
# Make Relative Abundence Matrices
BDdataREL <- BDdata
for(i in 1:dim(BDdata)[1]){
BDdataREL[i,] <- BDdata[i,]/sum(BDdata[i,])
}
# Import Taxonomy File
BD.tax <- read.tax(taxonomy = "../data/BD.0.03.cons.taxonomy", format = "rdp",
tax.levels = 6, col.tax = 3)
BDveg.in <- read.csv("../data/BDveg.csv", row.names = 1)
# Remove S and W Treatments
BDveg <- BDveg.in[-(which(rownames(BDveg.in) %in% SnW)), ]
# plant data as discrete and continuous biomass data: rotation	crop_numb	covercrop_g	weeds_g	crop_g	biomass_total	covercrop_prop	weeds_prop	crop_prop
rm(list=ls())
setwd("~/Desktop")
require("vegan")
require("dplyr")
require("ggplot2")
require("reshape")
require("reshape2")
require("cluster")
require("optpart")
library("nlme")
require("ade4")
Pig <- read.csv("./AbioticPigmentCR.csv", header=T)
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
newdata <- na.omit(Pig)
newdata <- na.omit(Pig) #drop missing data NA for pigment
df.Pig <- newdata[,c(23:28)] #Pigment
df.env.Pig <- newdata[,c(1:22)] #info for sites and abiotic
df <- decostand(df.Pig, method="hellinger")
#To test significance of abiotic conditions on pigments - use RDA function
# Look at the results with just Salinity + Temp  + TDP + TDN + DOC +  NH4 + PO4 + Nox
f <- df ~  Temp  + TDP + DOC + NH4 + PO4 + Nox
df.rda2 <- rda(f, data=df.env.Pig)
summary(df.rda2)
RsquareAdj(df.rda2)
plot(df.rda2) #works
plot(df.rda2,scaling=2,type="n")
points(df.rda2,"sites",col=df.env.Pig$Sites,pch=19) #I want to color by sites but getting error
print(df.rda2)
plot(df.rda2,scaling=2,type="n")
points(df.rda2,"sites",col=df.env.Pig$Sites,pch=19) #I want to color by sites but getting error
i
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/ConstructedStormwaterWetland/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
library(ggplot2)
library(psych)
library(dplyr)
library(tidyverse)
#ghg flux data. measured values
#getwd()
ghg <- read.csv("../data/CSW_Flux_5Feb2018.csv", header=T)
#design data. categorical values ans soil measurements
design <-read.csv("../data/CSW_field_design_soil.csv", header=T)
#water data
water <- read.csv("../data/CSW_Water_nutes.csv")
#ghg flux is calcualted from 4 timepoints. first we need to remove lines without flux calcuations.
ghg <- filter(ghg, !is.na(ghg$ch4cmgm2day))
#now can combine design and ghg datasets
ghg <- cbind(ghg, design)
#Add calculated fields
ghg <- mutate(ghg,
co2.ch4=ghg$co2mgm2hr/ghg$ch4mgm2hr, #co2:ch4 ratio
co2.n2o=ghg$co2mgm2hr/ghg$n2omgm2hr, #co2:n2o ratio
ch4co2eq=ghg$ch4mgm2hr*25, #methane carbon dioxide equivalents
n2oco2eq=ghg$n2omgm2hr*298 #nitrous oxide carbon dixode equivalents
)
#This is the annual amount of C stored or released from PI or SL plots yearly
#First get average of all plots by hyrdology and season in mg C m2 hr
ghg.co2.equiv <- ghg %>%
group_by(hydrology, season) %>%
summarise(mch4mgm2hr=mean(ch4mgm2hr),mco2mgm2hr=mean(co2mgm2hr),mn2omgm2hr=mean(n2omgm2hr)) %>%
#Then multiple mg C m2 hr * 24 * 365 = mg C m2 yr
mutate(ch4mgcm2yr = mch4mgm2hr * 8760, co2mgcm2yr = mco2mgm2hr*8760, n2omgnm2yr=mn2omgm2hr*8760) %>%
mutate(ch4mgcyr=0, co2mgcyr=0, n2omgnyr=0)%>%
#Then multiple each gas (ch4mgcyrco2, n2omgnyrco2, co2mgcyr)
#by percent PI (65%) and percent SL (35%) of 5600sq ft converted to m2 (520...)
mutate(ch4mgcyr=ifelse(hydrology=="PI", ch4mgcm2yr*338.167, ch4mgcm2yr * 182.09)) %>% mutate(co2mgcyr=ifelse(hydrology=="PI", co2mgcm2yr*338.167, co2mgcm2yr * 182.09)) %>% mutate(n2omgnyr=ifelse(hydrology=="PI", n2omgnm2yr*338.167, n2omgnm2yr * 182.09))%>%
#Take that amount of mg C yr and multiple by CO2 Equivalents
mutate(ch4mgcyrco2 = ch4mgcyr*25, n2omgnyrco2=n2omgnyr *298)
g <- ghg.co2.equiv %>%
group_by(hydrology, season) %>%
summarise(sum(ch4mgcyrco2), sum(co2mgcyr), sum(n2omgnyrco2))
require(tidyr)
wide_to_long <- gather(ghg.co2.equiv, co2eq, measurement, ch4mgcyrco2, co2mgcyr, n2omgnyrco2, factor_key=TRUE)
wide_to_long
totc <- summarise(wide_to_long, s = sum(measurement))
totc$s
levels(wide_to_long$hydrology)
levels(wide_to_long$hydrology) <- c("PI","SL")
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon mg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
ghg.co2.equiv.sl <- wide_to_long %>%
filter(hydrology == "SL")
p <-ggplot(ghg.co2.equiv.sl, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon mg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon mg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon mg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
ghg.co2.equiv.sl <- wide_to_long %>%
filter(hydrology == "SL")
p <-ggplot(ghg.co2.equiv.sl, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon mg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
#This is the annual amount of C stored or released from PI or SL plots yearly
#First get average of all plots by hyrdology and season in mg C m2 hr
ghg.co2.equiv <- ghg %>%
group_by(hydrology, season) %>%
summarise(mch4mgm2hr=mean(ch4mgm2hr),mco2mgm2hr=mean(co2mgm2hr),mn2omgm2hr=mean(n2omgm2hr)) %>%
#Then multiple mg C m2 hr * 24 * 365 = mg C m2 yr
mutate(ch4mgcm2yr = mch4mgm2hr * 8760/1000/1000, co2mgcm2yr = mco2mgm2hr*8760/1000/1000, n2omgnm2yr=mn2omgm2hr*8760/1000/1000) %>%
mutate(ch4mgcyr=0, co2mgcyr=0, n2omgnyr=0)%>%
#Then multiple each gas (ch4mgcyrco2, n2omgnyrco2, co2mgcyr)
#by percent PI (65%) and percent SL (35%) of 5600sq ft converted to m2 (520...)
mutate(ch4mgcyr=ifelse(hydrology=="PI", ch4mgcm2yr*338.167, ch4mgcm2yr * 182.09)) %>% mutate(co2mgcyr=ifelse(hydrology=="PI", co2mgcm2yr*338.167, co2mgcm2yr * 182.09)) %>% mutate(n2omgnyr=ifelse(hydrology=="PI", n2omgnm2yr*338.167, n2omgnm2yr * 182.09))%>%
#Take that amount of mg C yr and multiple by CO2 Equivalents
mutate(ch4mgcyrco2 = ch4mgcyr*25, n2omgnyrco2=n2omgnyr *298)
g <- ghg.co2.equiv %>%
group_by(hydrology) %>%
summarise(sum(ch4mgcyrco2), sum(co2mgcyr), sum(n2omgnyrco2))
require(tidyr)
wide_to_long <- gather(ghg.co2.equiv, co2eq, measurement, ch4mgcyrco2, co2mgcyr, n2omgnyrco2, factor_key=TRUE)
wide_to_long
totc <- summarise(wide_to_long, s = sum(measurement))
totc$s
#PI 98.86%
#8958
#SL 1.14%
#104
#Total C in mg = 39071 kg C year
levels(wide_to_long$hydrology)
levels(wide_to_long$hydrology) <- c("PI","SL")
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon kg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
ghg.co2.equiv.sl <- wide_to_long %>%
filter(hydrology == "SL")
p <-ggplot(ghg.co2.equiv.sl, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon kg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p <-ggplot(wide_to_long, aes(x=hydrology, y=measurement, fill=co2eq)) + geom_bar(stat="identity") +  labs(x = "Hydrology", y = (expression(paste("Total Annual Carbon (kg)"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
#This is the annual amount of C stored or released from PI or SL plots yearly
#First get average of all plots by hyrdology and season in mg C m2 hr
ghg.co2.equiv <- ghg %>%
group_by(hydrology, season) %>%
summarise(mch4mgm2hr=mean(ch4mgm2hr),mco2mgm2hr=mean(co2mgm2hr),mn2omgm2hr=mean(n2omgm2hr)) %>%
#Then multiple mg C m2 hr * 24 * 365 = mg C m2 yr
mutate(ch4mgcm2yr = mch4mgm2hr * 8760/1000/1000, co2mgcm2yr = mco2mgm2hr*8760/1000/1000, n2omgnm2yr=mn2omgm2hr*8760/1000/1000) %>%
mutate(ch4mgcyr=0, co2mgcyr=0, n2omgnyr=0)%>%
#Then multiple each gas (ch4mgcyrco2, n2omgnyrco2, co2mgcyr)
#by percent PI (65%) and percent SL (35%) of 5600sq ft converted to m2 (520...)
mutate(ch4mgcyr=ifelse(hydrology=="PI", ch4mgcm2yr*338.167, ch4mgcm2yr * 182.09)) %>% mutate(co2mgcyr=ifelse(hydrology=="PI", co2mgcm2yr*338.167, co2mgcm2yr * 182.09)) %>% mutate(n2omgnyr=ifelse(hydrology=="PI", n2omgnm2yr*338.167, n2omgnm2yr * 182.09))%>%
#Take that amount of mg C yr and multiple by CO2 Equivalents
mutate(ch4mgcyrco2 = ch4mgcyr*25, n2omgnyrco2=n2omgnyr *298)
g <- ghg.co2.equiv %>%
group_by(hydrology) %>%
summarise(sum(ch4mgcyrco2), sum(co2mgcyr), sum(n2omgnyrco2))
require(tidyr)
wide_to_long <- gather(ghg.co2.equiv, co2eq, measurement, ch4mgcyrco2, co2mgcyr, n2omgnyrco2, factor_key=TRUE)
wide_to_long
totc <- summarise(wide_to_long, s = sum(measurement))
totc$s
#PI 98.86%
#8958
#SL 1.14%
#104
#Total C in mg = 39071 kg C year
levels(wide_to_long$hydrology)
levels(wide_to_long$hydrology) <- c("PI","SL")
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon kg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
ghg.co2.equiv.sl <- wide_to_long %>%
filter(hydrology == "SL")
p <-ggplot(ghg.co2.equiv.sl, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon kg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon (kg)"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p <- ggplot(DEA, aes(x=season, y=rN2O_N2O.N2, color=as.factor(hydrology), shape=as.factor(hydrology))) + stat_summary(fun.data=mean_cl_boot,size=1.5, position=position_dodge(width=0.5)) + scale_color_manual(name="Hydrology", values=c("navy","darkgreen"), labels = c("PI", "SL")) + scale_shape_manual(name="Hydrology", values=c(17,16), labels = c("PI", "SL")) + scale_x_discrete(labels=c("1spring" = "spring", "2summer" = "summer", "3fall" = "fall", "4winter" = "winter"))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=18), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=18), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Season", y = (expression(paste("rate(N"[2],"O)/rate(N"[2],"O+N"[2],")")))) + theme(strip.text.x = element_text(size=18, face="bold"), strip.text.y = element_text(size=18, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1)) + theme(legend.title=element_text(size=14),legend.text=element_text(size=14))
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon (kg)"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
ghg.co2.equiv.sl <- wide_to_long %>%
filter(hydrology == "SL")
p <-ggplot(ghg.co2.equiv.sl, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon kg"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=20,face="bold"), axis.text=element_text(size=20), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=45, size=16), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Hydrology", y = (expression(paste("NH"[4], " mg L"^-{1})))) + theme(strip.text.x = element_text(size=20, face="bold"), strip.text.y = element_text(size=20, face="bold"), strip.background = element_rect(colour="black", fill="white", size=3))
p <-ggplot(ghg.co2.equiv.sl, aes(x=hydrology, y=measurement, fill=co2eq)) + geom_bar(stat="identity") +labs(x = "Hydrology", y = (expression(paste("Total Annual Carbon (kg)"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=12), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
soil.lm <- lm(no3.mgn.l.1~hydrology+season,data=design)
plot(soil.lm)
posthoc$groups
anova2<-(aov(no3.mgn.l.1~as.factor(hydrology)+as.factor(season),data=design))
posthoc <- TukeyHSD(anova2, group=T)
posthoc
p1 <- ggplot(design, aes(x=hydrology, y=no3.mgn.l.1, color=as.factor(season), shape=as.factor(season))) + stat_summary(fun.data=mean_cl_boot,size=1.25, position=position_dodge(width=0.5)) + scale_color_manual(name="Season", values=c("darkgreen","red", "orange", "navy"), labels = c("spring", "summer","fall","winter")) + scale_shape_manual(name="Season", values=c(15,16,17,18), labels = c("spring", "summer","fall","winter"))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=20,face="bold"), axis.text=element_text(size=20), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=45, size=16), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Hydrology", y = (expression(paste("NO"[3],, " mg L"^-{1})))) + theme(strip.text.x = element_text(size=20, face="bold"), strip.text.y = element_text(size=20, face="bold"), strip.background = element_rect(colour="black", fill="white", size=3))
ggsave("../figures/SoilNO3.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/SoilNO3.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=6, height=4, dpi=300, limitsize=TRUE)
#This is the annual amount of C stored or released from PI or SL plots yearly
#First get average of all plots by hyrdology and season in mg C m2 hr
ghg.co2.equiv <- ghg %>%
group_by(hydrology, season) %>%
summarise(mch4mgm2hr=mean(ch4mgm2hr),mco2mgm2hr=mean(co2mgm2hr),mn2omgm2hr=mean(n2omgm2hr)) %>%
#Then multiple mg C m2 hr * 24 * 365 = mg C m2 yr
mutate(ch4mgcm2yr = mch4mgm2hr * 8760/1000/1000, co2mgcm2yr = mco2mgm2hr*8760/1000/1000, n2omgnm2yr=mn2omgm2hr*8760/1000/1000) %>%
mutate(ch4mgcyr=0, co2mgcyr=0, n2omgnyr=0)%>%
#Then multiple each gas (ch4mgcyrco2, n2omgnyrco2, co2mgcyr)
#by percent PI (65%) and percent SL (35%) of 5600sq ft converted to m2 (520...)
mutate(ch4mgcyr=ifelse(hydrology=="PI", ch4mgcm2yr*338.167, ch4mgcm2yr * 182.09)) %>% mutate(co2mgcyr=ifelse(hydrology=="PI", co2mgcm2yr*338.167, co2mgcm2yr * 182.09)) %>% mutate(n2omgnyr=ifelse(hydrology=="PI", n2omgnm2yr*338.167, n2omgnm2yr * 182.09))%>%
#Take that amount of mg C yr and multiple by CO2 Equivalents
mutate(ch4mgcyrco2 = ch4mgcyr*25, n2omgnyrco2=n2omgnyr *298)
g <- ghg.co2.equiv %>%
group_by(hydrology) %>%
summarise(sum(ch4mgcyrco2), sum(co2mgcyr), sum(n2omgnyrco2))
require(tidyr)
wide_to_long <- gather(ghg.co2.equiv, co2eq, measurement, ch4mgcyrco2, co2mgcyr, n2omgnyrco2, factor_key=TRUE)
wide_to_long
totc <- summarise(wide_to_long, s = sum(measurement))
totc$s
#PI 98.86%
#8958
#SL 1.14%
#104
#Total C in mg = 39071 kg C year
levels(wide_to_long$hydrology)
levels(wide_to_long$hydrology) <- c("PI","SL")
p <-ggplot(wide_to_long, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon (kg)"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
ghg.co2.equiv.sl <- wide_to_long %>%
filter(hydrology == "SL")
p <-ggplot(ghg.co2.equiv.sl, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon (kg)"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=20,face="bold"), axis.text=element_text(size=20), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=45, size=16), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Hydrology", y = (expression(paste("NH"[4], " mg L"^-{1})))) + theme(strip.text.x = element_text(size=20, face="bold"), strip.text.y = element_text(size=20, face="bold"), strip.background = element_rect(colour="black", fill="white", size=3))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
p <-ggplot(ghg.co2.equiv.sl, aes(x=season, y=measurement, fill=co2eq)) + geom_bar(stat="identity") + facet_wrap(~hydrology) + scale_x_discrete(labels=c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter"), limits=c("sp", "sm", "f", "w")) + labs(x = "Season", y = (expression(paste("Total Annual Carbon (kg)"))))
p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=16), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16), strip.text.y = element_text(size=16), strip.background = element_rect(colour="black", fill="white", size=1)) + scale_fill_manual(values=c("navy","darkgreen", "orange"))
ggsave("../figures/CO2equiv_JustSL.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
ggsave("../figures/CO2equiv_JustSL.jpeg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=8, height=4, dpi=300, limitsize=TRUE)
