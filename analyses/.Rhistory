mutate(copio_order = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_order)) %>%
mutate(oligo_order = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_order)) %>%
mutate(order_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, order_ratio))
#By Family
soil.f.c <- soil.family %>%
filter(gnc >= 5)
c <- nrow(soil.f.c)
soil.f.o <- soil.family %>%
filter(gnc < 5)
o <- nrow(soil.f.o)
c_to_o <- o/c
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_family = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_family)) %>%
mutate(oligo_family = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_family)) %>%
mutate(family_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, family_ratio))
#By Order
soil.o.c <- soil.order %>%
filter(gnc >= 5)
c <- nrow(soil.o.c)
soil.o.o <- soil.order %>%
filter(gnc < 5)
o <- nrow(soil.o.o)
c_to_o <- o/c
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_order = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_order)) %>%
mutate(oligo_order = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_order)) %>%
mutate(order_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, order_ratio))
#By OTU
soil.otu.c <- soil.genus %>%
filter(gnc >= 5)
c <- nrow(soil.otu.c)
soil.otu.o <- soil.genus %>%
filter(gnc < 5)
o <- nrow(soil.otu.o)
c_to_o <- o/c
meta <- meta %>%
mutate(copio_otu = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_otu)) %>%
mutate(oligo_otu = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_otu)) %>%
mutate(otu_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, otu_ratio))
#remove datasets generated to be tidy
#rm(soilheir, adjusted, soil.adjusted, soil.domain, soil.phylum, soil.class, soil.genus, soil.order, #soil.class.c, soil.class.o, soil.otu.c, soil.otu.o)
}
levels(meta$Treatment) <- c("Unfertilized", "Fertilized")
p <- meta$plant
p <- ordered(p,levels=c("bulk","av", "ec"))
p <- revalue(p, c("bulk"="Bulk Soil", "av"="Grass", "ec"="Forb"))
p <- mapvalues(p, from = c("bulk","av","ec"), to = c("Bulk Soil", "Grass", "Forb"))
gene<- ggplot(meta, aes(x=p, y=otu_ratio, fill=Treatment))  +
geom_boxplot()+
scale_fill_manual(values=c("gray","darkgreen")) +
#Tukey groups
annotate("text",x=0.8,y=0.24, label="a") +
annotate("text",x=1.81,y=0.16, label="b") +
annotate("text",x=2.8,y=0.18, label="ab") +
annotate("text",x=1.2,y=0.19, label="ab") +
annotate("text",x=2.2,y=0.18, label="ab") +
annotate("text",x=3.2,y=0.18, label="ab") +
#Clear gridlines from plot and set plot border
theme_bw()  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.title.y=element_text(margin=margin(r=10)),
axis.title.x=element_text(margin=margin(t=10))) +
theme(axis.title=element_text(vjust=1,size=18),
axis.text=element_text(size=14), axis.text.x = element_text(size=14), panel.border =
element_rect(colour = "black",size=1)) +
theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Soil Source", y = "Copitroph:Oligotroph") +
theme(legend.text=element_text(size=18), legend.title = element_text(size=18),
legend.position = "bottom")
gene
ggsave("../figures/gene_copy.jpg", plot=gene, device=NULL, path=NULL, scale=1, width=6.3, height=4.4, dpi=900, limitsize=TRUE)
#Set interaction, run anova, and then Tukey if plant significant
i <- with(meta, interaction(Treatment, plant))
gnc <- aov(otu_ratio ~ Treatment + plant + i , data=meta)
plot(gnc)
anova(gnc)
#Tukey groups
t <- HSD.test(gnc, "i", group=TRUE, alpha=0.01)
t
plot(t)
i <- with(meta, interaction(Treatment, plant))
gnc <- lm(otu_ratio ~ Treatment + plant + i , data=meta)
plot(gnc)
anova(gnc)
#Tukey groups
t <- HSD.test(gnc, "i", group=TRUE, alpha=0.01)
t
#These are the .txt files generated from running RDP classifier to estimate gene copy number
#To keep with rest of analysis I removed RP samples
filename <- c("2M", "2MF", "4M","4MF","6M","6MF","8M","8MF","AVRS2M", "AVRS2MF", "AVRS4M","AVRS4MF","AVRS6M","AVRS6MF","AVRS8M","AVRS8MF","ECRS2M", "ECRS2MF", "ECRS4M","ECRS4MF","ECRS6M","ECRS6MF","ECRS8M","ECRS8MF")
#full list
#filename <- c("2M", "2MF", "4M","4MF","6M","6MF","8M","8MF","AVRP2M", "AVRP2MF", "AVRP4M","AVRP4MF","AVRP6M","AVRP6MF","AVRP8M","AVRP8MF","AVRS2M", "AVRS2MF", "AVRS4M","AVRS4MF","AVRS6M","AVRS6MF","AVRS8M","AVRS8MF","ECRP2M", "ECRP2MF", "ECRP4M","ECRP4MF","ECRP6M","ECRP6MF","ECRP8M","ECRP8MF","ECRS2M", "ECRS2MF", "ECRS4M","ECRS4MF","ECRS6M","ECRS6MF","ECRS8M","ECRS8MF")
#Use meta - already has RP removed, add gene copy number columns
new_col <- c("gc_adjusted","otu_count","bac_gnc","copio_otu","copio_class","oligo_otu","oligo_class", "class_ratio","otu_ratio","copio_phylum", "oligo_phylum","phylum_ratio","copio_order", "oligo_order","order_ratio","copio_family", "oligo_family","family_ratio")
meta[new_col] <- 0
#24 is the number of filenames
for (i in 1:24) {
#Each file represents a sample, for each sample get gene copy number by dividing adjusted relative  abundance by otu_count for that group to get gene copy number. Get gene copy number by OTU and by class, bin as copio or oligo, sum number of oligo and copio per file/sample, and then get a copio:oligo ratio
#set file path and file name. Tried using ~/GitHub/... but didn't work
soilfile <- paste("../data/gene_copy/", filename[i] , "_soil_hier.txt", sep="")
adjustedfile <-  paste("../data/gene_copy/cnadjusted_", filename[i], "_soil_hier.txt", sep="")
#read in files
#Soilheir has the otu count for each taxonomic grouping
#cnadjusted files has the adjusted otu count
#adjusted in that RDP calculates the adjusted otu_count from the original otu_count/gene copy number of that group. This gives the otu_count with consideration thatthe number of reads for an organism could be inflated if they have many rrn gene copies within an individual.
soilheir <- read.delim(soilfile,  header=T)
adjusted <- read.delim(adjustedfile, header=T)
#Renames count columns something more friendly
colnames(soilheir)[5] <- "otu_count"
colnames(adjusted)[5] <- "adjusted"
#Add otu_count, adjusted count, and calculated gene copy number into one dataset
soil.adjusted <- cbind(soilheir, adjusted= adjusted$adjusted)
soil.adjusted <- soil.adjusted %>% mutate(gnc = otu_count/adjusted)
#Filter by taxonomic rank
soil.phylum <- soil.adjusted %>% filter(rank=="phylum")
soil.class <- soil.adjusted %>% filter(rank=="class")
soil.order <- soil.adjusted %>% filter(rank=="order")
soil.family <-soil.adjusted %>% filter(rank=="family")
soil.genus <- soil.adjusted %>% filter(rank=="genus")
#Using a filtered dataset from above count the number of rows that correspond to copio or oligo
#If an otu has a gene count greater than 5 it is considered copiotroph
#If an otu has a gene count less than 5 then it is considered oligotroph
#By Phylum
soil.p.c <- soil.phylum %>%
filter(gnc >= 5)
c <- nrow(soil.p.c)
soil.p.o <- soil.phylum %>%
filter(gnc < 5)
o <- nrow(soil.p.o)
c_to_o <- c/o
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_phylum = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_phylum)) %>%
mutate(oligo_phylum = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_phylum)) %>%
mutate(phylum_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, phylum_ratio))
#By Class
soil.class.c <- soil.class %>%
filter(gnc >= 5)
c <- nrow(soil.class.c)
soil.class.o <- soil.class %>%
filter(gnc < 5)
o <- nrow(soil.class.o)
c_to_o <- c/o
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_class = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_class)) %>%
mutate(oligo_class = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_class)) %>%
mutate(class_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, class_ratio))
#By Order
soil.o.c <- soil.order %>%
filter(gnc >= 5)
c <- nrow(soil.o.c)
soil.o.o <- soil.order %>%
filter(gnc < 5)
o <- nrow(soil.o.o)
c_to_o <- c/o
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_order = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_order)) %>%
mutate(oligo_order = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_order)) %>%
mutate(order_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, order_ratio))
#By Order
soil.o.c <- soil.order %>%
filter(gnc >= 5)
c <- nrow(soil.o.c)
soil.o.o <- soil.order %>%
filter(gnc < 5)
o <- nrow(soil.o.o)
c_to_o <- c/o
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_order = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_order)) %>%
mutate(oligo_order = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_order)) %>%
mutate(order_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, order_ratio))
#By Family
soil.f.c <- soil.family %>%
filter(gnc >= 5)
c <- nrow(soil.f.c)
soil.f.o <- soil.family %>%
filter(gnc < 5)
o <- nrow(soil.f.o)
c_to_o <- c/o
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_family = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_family)) %>%
mutate(oligo_family = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_family)) %>%
mutate(family_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, family_ratio))
#By Order
soil.o.c <- soil.order %>%
filter(gnc >= 5)
c <- nrow(soil.o.c)
soil.o.o <- soil.order %>%
filter(gnc < 5)
o <- nrow(soil.o.o)
c_to_o <- c/o
#Add to copio, oligo, and ratio to meta table
meta <- meta %>%
mutate(copio_order = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_order)) %>%
mutate(oligo_order = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_order)) %>%
mutate(order_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, order_ratio))
#By OTU
soil.otu.c <- soil.genus %>%
filter(gnc >= 5)
c <- nrow(soil.otu.c)
soil.otu.o <- soil.genus %>%
filter(gnc < 5)
o <- nrow(soil.otu.o)
c_to_o <- c/o
meta <- meta %>%
mutate(copio_otu = ifelse(group == paste("WRC15", filename[i], sep="") , c, copio_otu)) %>%
mutate(oligo_otu = ifelse(group == paste("WRC15", filename[i], sep="") , o, oligo_otu)) %>%
mutate(otu_ratio = ifelse(group == paste("WRC15", filename[i], sep="") , c_to_o, otu_ratio))
#remove datasets generated to be tidy
#rm(soilheir, adjusted, soil.adjusted, soil.domain, soil.phylum, soil.class, soil.genus, soil.order, #soil.class.c, soil.class.o, soil.otu.c, soil.otu.o)
}
levels(meta$Treatment) <- c("Unfertilized", "Fertilized")
p <- meta$plant
p <- ordered(p,levels=c("bulk","av", "ec"))
p <- revalue(p, c("bulk"="Bulk Soil", "av"="Grass", "ec"="Forb"))
p <- mapvalues(p, from = c("bulk","av","ec"), to = c("Bulk Soil", "Grass", "Forb"))
gene<- ggplot(meta, aes(x=p, y=otu_ratio, fill=Treatment))  +
geom_boxplot()+
scale_fill_manual(values=c("gray","darkgreen")) +
#Tukey groups
annotate("text",x=0.8,y=0.24, label="a") +
annotate("text",x=1.81,y=0.16, label="b") +
annotate("text",x=2.8,y=0.18, label="ab") +
annotate("text",x=1.2,y=0.19, label="ab") +
annotate("text",x=2.2,y=0.18, label="ab") +
annotate("text",x=3.2,y=0.18, label="ab") +
#Clear gridlines from plot and set plot border
theme_bw()  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.title.y=element_text(margin=margin(r=10)),
axis.title.x=element_text(margin=margin(t=10))) +
theme(axis.title=element_text(vjust=1,size=18),
axis.text=element_text(size=14), axis.text.x = element_text(size=14), panel.border =
element_rect(colour = "black",size=1)) +
theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Soil Source", y = "Copitroph:Oligotroph") +
theme(legend.text=element_text(size=18), legend.title = element_text(size=18),
legend.position = "bottom")
gene
ggsave("../figures/gene_copy.jpg", plot=gene, device=NULL, path=NULL, scale=1, width=6.3, height=4.4, dpi=900, limitsize=TRUE)
#Set interaction, run anova, and then Tukey if plant significant
i <- with(meta, interaction(Treatment, plant))
gnc <- aov(otu_ratio ~ Treatment + plant + i , data=meta)
plot(gnc)
anova(gnc)
#Tukey groups
t <- HSD.test(gnc, "i", group=TRUE, alpha=0.01)
t
plot(t)
i <- with(meta, interaction(Treatment, plant))
gnc <- aov(log(otu_ratio) ~ Treatment + plant + i , data=meta)
plot(gnc)
anova(gnc)
#Tukey groups
t <- HSD.test(gnc, "i", group=TRUE, alpha=0.01)
t
plot(t)
####See WRC15-18_Rhizo.Rmd
meta.env <- read.csv(metafile)
#Comment below line if want to run soil properties for entire experiemnt
#Run below line if want to look at bulk and RS only
meta.env <- meta.env[!grepl("RS", meta.env$type),]
#NEED A SUMMARY TABLE
by_plant_treatment <- meta.env %>%
group_by(plant, Treatment) %>%
summarise_all(funs(mean,sd), na.rm=T)
by_treatment <- meta.env %>%
group_by(Treatment) %>%
summarise_all(funs(mean,sd), na.rm=T)
#i <- with(meta.env, interaction(Treatment, plant))
nh4 <- aov(nh4_mg.l ~ Treatment, meta.env)
plot(nh4)
anova(nh4)
nh4<- ggplot(meta.env, aes(x=Treatment, y=nh4_mg.l, fill=plant))  +
geom_boxplot() + scale_fill_manual(values=c("#999999", "#000000","333333"))
nh4
pH <- aov(pH ~ Treatment , meta.env)
plot(pH)
anova(pH)
ppH<- ggplot(meta.env, aes(x=Treatment, y=pH, fill=plant))  +
geom_boxplot() + scale_fill_manual(values=c("#999999", "#000000", "333333"))
ppH
#t <- HSD.test(pH, "i" , group=TRUE, alpha=0.05)
#t
#plot(t)
no3 <- aov(no3_mg.l ~ Treatment , data=meta.env)
plot(no3)
anova(no3)
avg_temp_C <- aov(avg_temp_C ~ Treatment , data=meta.env)
plot(avg_temp_C)
anova(avg_temp_C)
moist_percent <- aov(moist_percent ~ Treatment , data=meta.env)
plot(moist_percent)
anova(moist_percent)
TN <- aov(TN ~ Treatment , data=meta.env)
plot(TN)
anova(TN)
c_percent <- aov(c_percent ~ Treatment , data=meta.env)
plot(c_percent)
anova(c_percent)
n_percent <- aov(n_percent ~ Treatment , data=meta.env)
plot(n_percent)
anova(n_percent)
C_N <- aov(C_N ~ Treatment , data=meta.env)
plot(C_N)
anova(C_N)
i <- with(meta.env, interaction(Treatment, plant))
nh4 <- aov(nh4_mg.l ~ Treatment+plant+i, meta.env)
plot(nh4)
anova(nh4)
#clears R environment
rm(list = ls())
#use to set global options for chunks e.g., echo and warning options will be applied to all chuncks
knitr::opts_chunk$set(echo = FALSE, warning=FALSE)
#use to set working directory
knitr::opts_knit$set(root.dir="../GitHub/ConstructedStormwaterWetland/analyses")
#list.files()
#clears R environment
rm(list = ls())
#use to set global options for chunks e.g., echo and warning options will be applied to all chuncks
knitr::opts_chunk$set(echo = FALSE, warning=FALSE)
#use to set working directory
knitr::opts_knit$set(root.dir="../GitHub/ConstructedStormwaterWetland/analyses")
#list.files()
getwd()
#Set source R tools
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
#load requires packages
require("ggplot2")
require("psych")
require("dplyr")
require("tidyverse")
require("agricolae")
require("vegan")
require("reshape2") #need for pcoa
require("labdsv")
require("phyloseq")
require("lme4")
require("car")
require("MASS")
require("lindia")
#BiocManager::install("phyloseq")
#Set Std Err and Conf Int
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
cbrt<- function(x) { sign(x) * abs(x)^1/3
}
set.seed(42)
#getwd()
#ghg flux data. measured values
ghg <- read.csv("../data/CSW_GHG_Flux.csv", header=T)
#design data. categorical values ans soil measurements
design <-read.csv("../data/CSW_field_design_soil.csv", header=T)
#water nutrient data
water <- read.csv("../data/CSW_Water_nutes.csv")
#ghg flux is calcualted from 4 timepoints. first we need to remove lines without flux calcuations.
ghg <- ghg[,-c(3:4,6:14)]
ghg <- filter(ghg, !is.na(ghg$ch4cgm2day))
#now can combine design and ghg datasets
ghg <- cbind(ghg, design)
#Add calculated fields
ghg <- mutate(ghg,
co2ch4=ghg$ch4cmgm2day/ghg$co2cmgm2day, #ch4:co2 ratio
ch4co2eq=ghg$ch4cmgm2day*25, #methane carbon dioxide equivalents
n2oco2eq=ghg$n2onmgm2day*298 #nitrous oxide carbon dixode equivalents
)
colman <- c("blue","chartreuse4")
hydro_label <- c("flooded wetland", "upland")
season_label <- c("sp" = "spring", "sm" = "summer", "f" = "fall", "w" = "winter")
colseason <- c("brown","orange","green4","navyblue") #changed color order follows f, sm, sp, w
#I want to know if hydrology, season, distance.m (from inlet to outlet), or num.days.last.rain has the greatest influence on CH4, CO2, and N2O fluxes from the wetland
#Coverted distance.m to categorical factor, it is the same each sampling
#inlet:1w, 6t, 7t  #middle:2w, 3w, 8t, 9t, 10t    outlet: 4w, 5w, 11t, 12t, 13t   #upland 14t, 15t
#Quick Data Summary
ghg.summary <- ghg %>%
group_by(hydrology)%>%
dplyr::summarise(mean_ch4cmgm2hr=mean(ch4cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_co2cmgm2hr=mean(co2cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_n2onmgm2hr=mean(n2onmgm2hr), sd_n2onmgm2hr=sd(n2onmgm2hr))
ghg.summary
ghg.summary <- ghg %>%
group_by(hydrology, num.days.last.rain)%>%
dplyr::summarise(mean_ch4cmgm2hr=mean(ch4cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_co2cmgm2hr=mean(co2cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_n2onmgm2hr=mean(n2onmgm2hr), sd_n2onmgm2hr=sd(n2onmgm2hr))
ghg.summary
ghg.summary <- ghg %>%
group_by(hydrology, distance.bin)%>%
dplyr::summarise(mean_ch4cmgm2hr=mean(ch4cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_co2cmgm2hr=mean(co2cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_n2onmgm2hr=mean(n2onmgm2hr), sd_n2onmgm2hr=sd(n2onmgm2hr))
ghg.summary
ghg.summary <- ghg %>%
group_by(hydrology, season)%>%
dplyr::summarise(mean_ch4cmgm2hr=mean(ch4cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_co2cmgm2hr=mean(co2cmgm2hr), sd_co2cmgm2hr=sd(co2cmgm2hr),mean_n2onmgm2hr=mean(n2onmgm2hr), sd_n2onmgm2hr=sd(n2onmgm2hr))
ghg.summary
#Mike suggested violin plots so I gave it a go and they were very squished
#####Why are they so squished?
ggplot(aes(x=sampleid, y=ch4cmgm2hr, color=hydrology), data=ghg)+
geom_violin(trim=FALSE) +
facet_grid(~season)
#sqrt seems to unsquish them bit
ggplot(aes(x=sampleid, y=cbrt(ch4cmgm2hr), color=hydrology), data=ghg)+
geom_violin(trim=FALSE)+
facet_grid(~season)
#maybe boxplots are not so bad in this case?
ggplot(aes(x=sampleid, y=ch4cmgm2hr, color=hydrology), data=ghg)+
geom_boxplot()+
facet_grid(~season)
ggplot(aes(x=sampleid, y=ch4cmgm2hr, color=hydrology), data=ghg)+
geom_boxplot()
#First check the distibution of residuals --- not so great
ch4.lm <- lmer(ch4cmgm2hr~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
#Try cuberoot - works with negative values
#This decreased variance in random effects, CI not 0, but still not normal or is it?
ch4.lm <- lmer((ch4cmgm2hr)^(1/3)~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
#Since dataset still not normal... going to try log by first adding a constant to deal with < 0 values
m <- min(ghg$ch4cmgm2hr)
ghg$log.ch4 <- log(1 - m + ghg$ch4cmgm2hr)
ch4.lm <- lmer(log.ch4~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
###Not sure if logging helped. Looks like one of diagnostics is better and one is worse. I will run models with both and see what happens
#boxcox for scaling best transformation
#This tells you what lambda value to scale data too
#Keep getting error. Think needs to be lm instead...
#First check the distibution of residuals --- not so great
ch4.lm <- lmer(ch4cmgm2hr~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
#Try cuberoot - works with negative values
#This decreased variance in random effects, CI not 0, but still not normal or is it?
ch4.lm <- lmer((ch4cmgm2hr)^(1/3)~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
#Since dataset still not normal... going to try log by first adding a constant to deal with < 0 values
m <- min(ghg$ch4cmgm2hr)
ghg$log.ch4 <- log(1 - m + ghg$ch4cmgm2hr)
ch4.lm <- lmer(log.ch4~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
###Not sure if logging helped. Looks like one of diagnostics is better and one is worse. I will run models with both and see what happens
#boxcox for scaling best transformation
#This tells you what lambda value to scale data too
#Keep getting error. Think needs to be lm instead...
First check the distibution of residuals --- not so great
#First check the distibution of residuals --- not so great
ch4.lm <- lmer(ch4cmgm2hr~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
#Try cuberoot - works with negative values
#This decreased variance in random effects, CI not 0, but still not normal or is it?
ch4.lm <- lmer((ch4cmgm2hr)^(1/3)~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
#Try cuberoot - works with negative values
#This decreased variance in random effects, CI not 0, but still not normal or is it?
ch4.lm <- lmer((ch4cmgm2hr)^(1/3)~(1|sampleid), data=ghg, REML=TRUE)
summary(ch4.lm, ddf="Kenward-Roger")
confint(ch4.lm)
p=profile(ch4.lm)
xyplot(p)
densityplot(p)
qqPlot(resid(ch4.lm), main="QQ Plot")
shapiro.test(resid(ch4.lm))
